#go-toolset:1.21

FROM registry.redhat.io/ubi8/go-toolset:1.21@sha256:742ae6ec1aef3e7faae488c47695fb64964d342aefecf52d23bd9d5e6731d0b6 AS build

WORKDIR /workspace

# Copy the go sources
COPY main.go main.go
COPY apis/ apis/
COPY controllers/ controllers/
COPY config/internal config/internal
COPY generated/ generated/
COPY pkg/ pkg/

USER root

COPY go.mod go.mod
COPY go.sum go.sum
RUN go mod download

USER root
# Build using native go compiler from BUILDPLATFORM but compiled output for TARGETPLATFORM

RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 GO111MODULE=on go build -a -o manager main.go


###############################################################################
# Stage 2: Copy build assets to create the smallest final runtime image
###############################################################################
#ubi-minimal:latest
FROM registry.redhat.io/ubi8/ubi-minimal@sha256:33161cf5ec11ea13bfe60cad64f56a3aa4d893852e8ec44b2fd2a6b40cc38539 AS runtime

ARG USER=2000

LABEL com.redhat.component="odh-modelmesh-serving-controller-container" \
      name="managed-open-data-hub/odh-modelmesh-serving-controller-rhel8" \
      description="Manages lifecycle of ModelMesh Serving Custom Resources and associated Kubernetes resources" \
      summary="odh-modelmesh-serving-controller" \
      maintainer="['managed-open-data-hub@redhat.com']" \
      io.openshift.expose-services="" \
      io.k8s.display-name="modelmesh-serving-controller" \
      io.k8s.description="modelmesh-serving-controller" \
      com.redhat.license_terms="https://www.redhat.com/licenses/Red_Hat_Standard_EULA_20191108.pdf"


## Install additional packages
RUN microdnf install -y shadow-utils &&\
    microdnf clean all

USER ${USER}

WORKDIR /
COPY --from=build /workspace/manager .

COPY config/internal config/internal

ENTRYPOINT ["/manager"]
